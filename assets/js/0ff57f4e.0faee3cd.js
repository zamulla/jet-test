"use strict";(self.webpackChunkjet_test=self.webpackChunkjet_test||[]).push([[153],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=o,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7098:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:4},i="Compose HTML tutorial",l={unversionedId:"compose-html-tutorial",id:"compose-html-tutorial",title:"Compose HTML tutorial",description:"The Compose HTML library is aimed at producing Kotlin/JS output using the same Composable approach as the rest of Kotlin Multiplatform. This tutorial is going to guide you to a simple web app from scratch.",source:"@site/docs/compose-html-tutorial.md",sourceDirName:".",slug:"/compose-html-tutorial",permalink:"/jet-test/docs/compose-html-tutorial",draft:!1,editUrl:"https://github.com/zamulla/jet-test/docs/compose-html-tutorial.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Regex how-to",permalink:"/jet-test/docs/regex-search"}},s={},p=[{value:"The end goal",id:"the-end-goal",level:2},{value:"What you will need",id:"what-you-will-need",level:2},{value:"Let&#39;s make a project",id:"lets-make-a-project",level:2},{value:"Structure of the source code",id:"structure-of-the-source-code",level:2},{value:"Gradle configuration",id:"gradle-configuration",level:3},{value:"Source code",id:"source-code",level:3},{value:"Run the project",id:"run-the-project",level:2},{value:"What&#39;s next",id:"whats-next",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...a}=e;return(0,o.kt)(c,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"compose-html-tutorial"},"Compose HTML tutorial"),(0,o.kt)("p",null,"The Compose HTML library is aimed at producing Kotlin/JS output using the same Composable approach as the rest of Kotlin Multiplatform. This tutorial is going to guide you to a simple web app from scratch."),(0,o.kt)("h2",{id:"the-end-goal"},"The end goal"),(0,o.kt)("p",null,"The app that we are creating is going to be a single page with a click counter: each press of a button is going to add to a counter displayed above the button. We're not going to persistently store anything, the number of clicks will reset to zero after each reload."),(0,o.kt)("h2",{id:"what-you-will-need"},"What you will need"),(0,o.kt)("p",null,"You'll need an IDE and an installed JDK:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intellij IDEA"),". While you can use any environment suitable for Gradle projects, this tutorial demonstrates specifically how the project would work in IDEA."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"JDK 11 or newer"),". Whatever your environment, it should have at least JDK 11 installed or integrated.")),(0,o.kt)("h2",{id:"lets-make-a-project"},"Let's make a project"),(0,o.kt)("p",null,"You can clone the template from GitHub, or just create a project from scratch."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The template is available at the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/JetBrains/compose-multiplatform-html-library-template"},"specific GitHub repository"),".",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Press ",(0,o.kt)("strong",{parentName:"li"},"Use this template")," and create your own repository with the provided code."),(0,o.kt)("li",{parentName:"ol"},"Copy the repository address of the template from the ",(0,o.kt)("strong",{parentName:"li"},"Code")," dropdown."),(0,o.kt)("li",{parentName:"ol"},"In Intellij IDEA, choose ",(0,o.kt)("strong",{parentName:"li"},"File \u2192 New \u2192 Project from Version Control")," and paste the address in the ",(0,o.kt)("strong",{parentName:"li"},"URL")," field, then press ",(0,o.kt)("strong",{parentName:"li"},"Clone"),"."))),(0,o.kt)("li",{parentName:"ul"},"If you would like to create the project from scratch, in IDEA, for example, you can:",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Select ",(0,o.kt)("strong",{parentName:"li"},"File \u2192 New \u2192 Project"),"."),(0,o.kt)("li",{parentName:"ol"},"Choose Kotlin as the language and Gradle as the build system, then press ",(0,o.kt)("strong",{parentName:"li"},"Create"),". We'll go over the code in the next section.\n",(0,o.kt)("img",{alt:"new-project",src:n(2165).Z,width:"1824",height:"1646"}))))),(0,o.kt)("h2",{id:"structure-of-the-source-code"},"Structure of the source code"),(0,o.kt)("p",null,"Important code that enables the app to run is divided between Gradle configuration and source files."),(0,o.kt)("h3",{id:"gradle-configuration"},"Gradle configuration"),(0,o.kt)("p",null,"Make sure you reload your Gradle project after changing the configuration files (in IDEA, open the Gradle panel and press the ",(0,o.kt)("strong",{parentName:"p"},"Reload All Gradle Projects")," button)."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Gradle properties the build is going to use:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:'language-title="gradle.properties"'},"org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8\nkotlin.code.style=official\nkotlin.version=1.9.0\ncompose.version=1.4.3\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Gradle settings for the project. Choose the name to set as ",(0,o.kt)("inlineCode",{parentName:"p"},"rootProject.name")," \u2013 this is going to be the name of the compiled .js file in the build output:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-gradle",metastring:'title="settings.gradle(.kts)"',title:'"settings.gradle(.kts)"'},'pluginManagement {\n    repositories {\n        gradlePluginPortal()\n        maven("https://maven.pkg.jetbrains.space/public/p/compose/dev")\n    }\n\n    plugins {\n        kotlin("multiplatform").version(extra["kotlin.version"] as String)\n        id("org.jetbrains.compose").version(extra["compose.version"] as String)\n    }\n}\n\nrootProject.name = "change-to-your-project-name"\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Gradle build script (make sure ",(0,o.kt)("inlineCode",{parentName:"p"},"kotlin.srcDir")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"resources.srcDir")," point to existing folders):"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-gradle",metastring:'title="build.gradle(.kts)"',title:'"build.gradle(.kts)"'},'plugins {\n  kotlin("multiplatform")\n  id("org.jetbrains.compose")\n}\n\nrepositories {\n    mavenCentral()\n    maven("https://maven.pkg.jetbrains.space/public/p/compose/dev")\n    google()\n}\n\nkotlin {\n    js(IR) {\n        browser()\n        binaries.executable()\n    }\n    sourceSets {\n        val jsMain by getting {\n            kotlin.srcDir("src/main/kotlin")\n            resources.srcDir("src/main/resources")\n\n            dependencies {\n                implementation(compose.html.core)\n                implementation(compose.runtime)\n            }\n        }\n    }\n}\n')))),(0,o.kt)("h3",{id:"source-code"},"Source code"),(0,o.kt)("p",null,"The source code for the app consists of two files:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"an HTML file that is going to be used to embed the JS code (should be put in the ",(0,o.kt)("inlineCode",{parentName:"li"},"resources.srcDir")," folder specified in ",(0,o.kt)("inlineCode",{parentName:"li"},"build.gradle.kts"),"),"),(0,o.kt)("li",{parentName:"ul"},"a Kotlin file describing the logic and the Composable that we are using (should be put in the ",(0,o.kt)("inlineCode",{parentName:"li"},"kotlin.srcDir")," folder).")),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/JetBrains/compose-multiplatform-html-library-template/blob/main/src/main/resources/index.html"},"HTML file")," is describing a very barebones structure, the important parts are these:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\n\x3c!-- Kotlin code is going to refer to this element to render the Composable. --\x3e\n<div id="root"></div>\n\n\x3c!-- The name of the .js file must match the value of rootProject.name in the settings.gradle.kts file. --\x3e\n<script src="compose-multiplatform-html-library-template.js"><\/script>\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/JetBrains/compose-multiplatform-html-library-template/blob/main/src/main/kotlin/main.kt"},"Kotlin file")," describes the ",(0,o.kt)("inlineCode",{parentName:"p"},"Body()")," Composable and renders it in the ",(0,o.kt)("inlineCode",{parentName:"p"},"main()")," function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'fun main() {\n    // rootElementId is the id of the HTML element where the Composable should be rendered.\n    renderComposable(rootElementId = "root") {\n        Body()\n    }\n}\n\n@Composable\nfun Body() {\n    var counter by remember { mutableStateOf(0) }\n\n    // <div> displaying the number of clicks.\n    Div {\n        Text("Clicked: ${counter}")\n    }\n\n    // Button that increases the counter.\n    Button(\n        attrs = {\n            onClick { _ ->\n                counter++\n            }\n        }\n    ) {\n        Text("Click")\n    }\n}\n')),(0,o.kt)("h2",{id:"run-the-project"},"Run the project"),(0,o.kt)("p",null,"When everything is in place, make sure you rebuilt the Gradle project to account for changes in configuration, and run it:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"To build the current version, start the Gradle task ",(0,o.kt)("strong",{parentName:"li"},"kotlin browser \u2192 jsBrowserRun")," in IDEA, or run this shell command:  ",(0,o.kt)("inlineCode",{parentName:"li"},"./gradlew jsBrowserRun")),(0,o.kt)("li",{parentName:"ul"},"To make the build watch changes in the files and rebuild the project on the fly, use the command ",(0,o.kt)("inlineCode",{parentName:"li"},"./gradlew jsBrowserRun --continuous"),". You can also modify the ",(0,o.kt)("strong",{parentName:"li"},"jsBrowserRun")," Gradle task in IDEA to make it start like this by default:\n",(0,o.kt)("img",{alt:"continuous screenshot",src:n(8643).Z,width:"1524",height:"1270"}))),(0,o.kt)("h2",{id:"whats-next"},"What's next"),(0,o.kt)("p",null,"Now you have built and run a simple, but complete Kotlin/JS app. If it looks useful, you can explore the Compose HTML further:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/JetBrains/compose-multiplatform/tree/master/tutorials/HTML/Style_Dsl"},"Style the components of your app")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/JetBrains/compose-multiplatform/tree/master/tutorials/HTML/Building_UI"},"Build a more complex UI")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/JetBrains/compose-multiplatform/tree/master/tutorials/HTML/Events_Handling"},"Handle events"))))}m.isMDXComponent=!0},8643:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/gradle-jsbrowser-continuous-8430486bf506571ee93b757f87a74c97.png"},2165:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/idea-new-project-7507aa31dde5ff55796f80d52331dca6.png"}}]);