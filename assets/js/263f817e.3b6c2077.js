"use strict";(self.webpackChunkjet_test=self.webpackChunkjet_test||[]).push([[693],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>m});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},v="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),v=c(o),d=a,m=v["".concat(s,".").concat(d)]||v[d]||u[d]||i;return o?n.createElement(m,r(r({ref:t},p),{},{components:o})):n.createElement(m,r({ref:t},p))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=o.length,r=new Array(i);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[v]="string"==typeof e?e:a,r[1]=l;for(var c=2;c<i;c++)r[c]=o[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},7058:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=o(7462),a=(o(7294),o(3905));const i={sidebar_position:1},r="Overview",l={unversionedId:"kotlin-overview/overview",id:"kotlin-overview/overview",title:"Overview",description:"Some users complain that the current Kotlin overview is a \u201cplatform\u201d overview instead of a language overview.",source:"@site/docs/kotlin-overview/overview.md",sourceDirName:"kotlin-overview",slug:"/kotlin-overview/overview",permalink:"/jet-test/docs/kotlin-overview/overview",draft:!1,editUrl:"https://github.com/zamulla/jet-test/docs/kotlin-overview/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Kotlin overview",permalink:"/jet-test/docs/category/kotlin-overview"},next:{title:"Outline of the main Overview document",permalink:"/jet-test/docs/kotlin-overview/overview-outline"}},s={},c=[],p={toc:c},v="wrapper";function u(e){let{components:t,...o}=e;return(0,a.kt)(v,(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Some users complain that the current Kotlin overview is a \u201cplatform\u201d overview instead of a language overview."),(0,a.kt)("p",null,"I'll infer a more specific complaint as far as I understand it: the \u201cplatform\u201d they mention is the collection of tools, IDEs and services that make it easy and efficient to use Kotlin in any project. The problem for these users then probably is that conceptually it's a bit of a cart before the horse: tell me about the language first, then I'll be interested in the tools supporting the language. If I don't like or understand the language, I don't really need the bells and whistles."),(0,a.kt)("p",null,"What we have now under \u201cKotlin overview\u201d is a list of use cases which are ordered, I guess, in the order of their relative popularity. I think use cases work well as a method of clustering information for an overview, easy to follow and relate. But it looks a bit like a list of apple varieties mixed with orange varieties."),(0,a.kt)("p",null,"So for the first problem, of ",(0,a.kt)("strong",{parentName:"p"},"new structure"),": organize the use cases in a more uniform manner; defocus technologies and tools, elevate the broader themes of programming."),(0,a.kt)("p",null,"High-level description of the content for a language overview:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"There should be a main page, the overview of the overview. [It constantly bugs me that sections containing other sections in the menu on the left are contentless in Kotlin docs. Almost looks like a platform limitation? Although TeamCity, for instance, can have a top-level ",(0,a.kt)("a",{parentName:"li",href:"https://www.jetbrains.com/help/teamcity/getting-started-with-teamcity.html"},"Getting Started")," page with its own text.]",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"In The Overview we can compile the non-platform-specific advantages of using Kotlin (like maturity of the language and and ease of learning, a paragraph each) and link to the following pages with specific advantages, or further into documentation \u2014 overview should not explain, it should overview."),(0,a.kt)("li",{parentName:"ul"},"I made an ",(0,a.kt)("a",{parentName:"li",href:"/jet-test/docs/kotlin-overview/overview-outline"},"outline of The Overview page")," as the \u201cmain document of the Kotlin overview section\u201d."))),(0,a.kt)("li",{parentName:"ol"},"Add pages for mobile and web development similar to ",(0,a.kt)("a",{parentName:"li",href:"https://kotlinlang.org/docs/server-overview.html"},"Kotlin for server side"),": easy-to-understand benefits of the language for the particular case, then concrete implementations and tools.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"In the spirit of a language overview I would put the links from \u201cNext steps\u201d on the server side page directly below the intro list of benefits, again, to give the lay of the land before diving into specific (and looong) list of tools."),(0,a.kt)("li",{parentName:"ul"},"The page for mobile development would deal with Android and iOS, leading logically to an acquaintance with Multiplatform."),(0,a.kt)("li",{parentName:"ul"},"The page for web development would combine information about Kotlin/Wasm and Kotlin/JS."),(0,a.kt)("li",{parentName:"ul"},"Leave \u201cKotlin for data science\u201d and \u201cKotlin for competitive programming\u201d as they are, niche but important use cases."))),(0,a.kt)("li",{parentName:"ol"},"Add a page about Java interoperability: I remember it being a big deal in the past, but I'd ask a product lead / devrel if it's actually something to focus on. Regardless, this stuff is gold, I think, as long as Java remains among the 3-5 most popular languages: ",(0,a.kt)("a",{parentName:"li",href:"https://kotlinlang.org/docs/comparison-to-java.html"},"https://kotlinlang.org/docs/comparison-to-java.html")),(0,a.kt)("li",{parentName:"ol"},"Give an overview for the standard library and official libraries (as of now they don't seem to have an overview at all, even in the dedicated sections of the docs). Like, we have them, they have this stuff and that stuff, they're solid, check them out if you're wondering what's covered and what isn't."),(0,a.kt)("li",{parentName:"ol"},"Leave \u201cKotlin Native\u201d as it is as well. Programming ends with running the code, the overview should be about that too."),(0,a.kt)("li",{parentName:"ol"},"Remove the dedicated page for Kotlin Multiplatform and make it the very first page inside the \u201cMultiplatform development\u201d section. Everything relevant should mention and lead to Multiplatform, but it really looks out of place in the language overview. Vice versa, the \u201cMultiplatform development\u201d section without a general overview of multiplatform development looks a bit haphazard.")))}u.isMDXComponent=!0}}]);